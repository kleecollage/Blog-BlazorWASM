@page "/posts-radzen"

@inject IPostService PostService
@inject IJSRuntime JsRuntime
@attribute [Authorize]
    
<PageTitle>Posts</PageTitle>

<h1 class="text-center">Posts Page</h1>

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false"
                FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true"
                PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@Posts" TItem="Post" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or"
                SelectionMode="DataGridSelectionMode.Single" class="mb-3">
    <Columns>
        <RadzenDataGridColumn TItem="Post" Property="Id" Filterable="false" Title="ID" Frozen="true" Width="40px" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn TItem="Post" Property="Title" Title="First Name" Frozen="true" Width="200px" />
        <RadzenDataGridColumn TItem="Post" Property="Tags" Title="Job Title" Width="200px" />
        <RadzenDataGridColumn TItem="Post" Property="Description" Title="Last Name" Width="140px"/>
        <RadzenDataGridColumn TItem="Post" Title="Image" Frozen="true" Sortable="false" Filterable="false" Width="80px" TextAlign="TextAlign.Center" >
            <Template Context="data">
                <RadzenImage Path="@data.PathImage" class="rz-gravatar" />
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Post" Property="CreatedAt" Title="Creation Date" FormatString="{0:MM/dd/yyyy}" Width="150px" />
        <RadzenDataGridColumn TItem="Post" Property="UpdatedAt" Title="Last Update" FormatString="{0:MM/dd/yyyy}" Width="150px" />
        <RadzenDataGridColumn TItem="Post" Title="Actions">
            <Template Context="data">
                <NavLink href="@($"edit-post/{data.Id}")" class="btn btn-success">
                    <i class="bi bi-pencil-fill"></i>&nbsp;Edit
                </NavLink>
                <button class="btn btn-danger" @onclick="() => OnDelete(data.Id)">
                    <i class="bi bi-trash3-fill"></i>&nbsp;Remove
                </button>
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>
<ConfirmDelete ProcessParentComponent="OnProcess" ConfirmChange="ConfirmDelete"/>

@code {
    public IEnumerable<Post> Posts { get; set; } = new List<Post>();
    private bool OnProcess { get; set; } = false;
    private int? DeletePostId { get; set; } = null;
    
    protected override async Task OnInitializedAsync()
    {
        Posts = await PostService.GetAllPosts();
    }

    public async Task OnDelete(int postId)
    {
        DeletePostId = postId;
        await JsRuntime.InvokeVoidAsync("ShowModal");
    }

    public async Task ConfirmDelete(bool confirm)
    {
        OnProcess = true;
        if (confirm && DeletePostId != null)
        { 
            await PostService.DeletePost(DeletePostId.Value);
            await JsRuntime.ToastrSuccess("Post Deleted!");
            Posts = await PostService.GetAllPosts();
        }
        OnProcess = false;
        await JsRuntime.InvokeVoidAsync("HideModal");
    }
}














